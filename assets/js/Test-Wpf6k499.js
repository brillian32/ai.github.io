import{am as M,_ as U,g as D,h as q,c,a as t,j as p,an as S,ab as h,t as u,k as b,o as f}from"./index-C1WhnmXM.js";import{h as A,u as C}from"./aqi_statistics-GnYvFnWA.js";const V=M("aqi",{state:()=>({aqiData:{"1d":null,"3d":null,"7d":null,"14d":null},accessibleDates:null,loading:!1,error:null,lastFetchParams:{}}),actions:{async fetchAqiData(l){try{if(this.loading=!0,this.error=null,!["1d","3d","7d","14d"].includes(l.duration))throw new Error("无效的时间范围参数");const s={headers:{token:localStorage.getItem("token")},params:l},e=await A.get("/api/v1/aqi/forecasts_data",s);return this.aqiData[l.duration]=e.data,this.lastFetchParams[l.duration]=l,localStorage.setItem(`aqiCache_${l.duration}`,JSON.stringify({data:e.data,timestamp:Date.now()})),e.data}catch(s){this.error=s.response?.data?.msg||`AQI数据获取失败: ${s.message}`}finally{this.loading=!1}},_shouldUseCache(l){const s=JSON.parse(localStorage.getItem(`aqiCache_${l.duration}`)||"null");return s&&Date.now()-s.timestamp<36e5&&JSON.stringify(l)===JSON.stringify(this.lastFetchParams[l.duration])},async fetchAccessibleDates(l){const s={headers:null,params:l},e=await A.get("/api/v1/aqi/forecasts_info",s);return this.accessibleDates=e.data,e.data}},getters:{formatTimePoint:l=>(s,e)=>{const r=l.aqiData[s]?.start_time;if(!r)return"";const d=dayjs(r,"YYYYMMDDHH");return s==="1d"?d.add(e,"hour").format("HH:00"):d.add(e,"day").format("MM-DD")},getAqiRanges:l=>(s,e)=>{const r=l.getCityAqi(s.toLowerCase(),e);return r?{province:l.aqiData[e]?.province,city:s,model:l.aqiData[e]?.model_name,timeRange:e,forecasts:r.forecasts_aqi_data.AQI.map((d,m)=>{const i=d;let n,g;if(i<=50)n=Math.max(0,i-10),g=i+10;else{const y=Math.ceil(i*.2);n=i-y,g=i+y}return{timestamp:l.formatTimePoint(e,m),aqi_median:i,range_min:Math.floor(n),range_max:Math.ceil(g)}})}:null},getCityAqi:l=>(s,e)=>l.aqiData[e]?.cities?l.aqiData[e].cities.find(r=>r.city===s.toLowerCase()):null,formattedUpdateTime:l=>s=>{const e=l.aqiData[s]?.update_time;return e?`${e.slice(0,4)}-${e.slice(4,6)}-${e.slice(6,8)} ${e.slice(8,10)}:00`:""},pollutantStats:l=>s=>{const e={};return l.aqiData[s]?.cities?.forEach(r=>{r.forecasts_aqi_data?.forEach(d=>{d.primary_pollutants?.forEach(m=>{e[m]=(e[m]||0)+1})})}),e}}}),P={class:"api-test-container"},T={class:"control-panel"},N={class:"input-group"},Q={key:0,class:"params-section"},$={class:"input-group"},J={class:"input-group"},O={key:1,class:"params-section"},E={class:"input-group"},F={class:"input-group"},H={class:"input-group"},Y=["disabled"],x={class:"result-panel"},B={key:0,class:"error-box"},R={key:1,class:"data-section"},j={class:"data-grid"},L={class:"raw-data"},z={key:2,class:"data-section"},G={class:"data-grid"},K={class:"raw-data"},W={__name:"Test",setup(l){const s=V(),e=C(),r=D("realtime"),d=D(!1),m=D(null),i=D({range:"7d",city:"guiyang"}),n=D({start_time:"2025010100",end_time:"2025010800",forecasts_mode:"one_day_earlier",city:"guiyang",model:"model1"}),g=q(()=>s.formattedUpdateTime(i.value.range)),y=q(()=>s.getCityAqi(i.value.city,i.value.range)),_=q(()=>e.statisticsData),w=async()=>{try{d.value=!0,m.value=null,r.value==="realtime"?await s.fetchAqiData(i.value.range,{city:i.value.city}):await e.fetchStatistics(n.value)}catch(v){m.value=v.message}finally{d.value=!1}},k=q(()=>{const{update_time:v,cities:a,...o}=s.aqiData[i.value.range]||{};return JSON.stringify(o,null,2)}),I=q(()=>{const{real_aqi_data:v,...a}=_.value||{};return JSON.stringify(a,null,2)});return(v,a)=>(f(),c("div",P,[t("div",T,[t("div",N,[a[9]||(a[9]=t("label",null,"测试模式：",-1)),p(t("select",{"onUpdate:modelValue":a[0]||(a[0]=o=>r.value=o)},a[8]||(a[8]=[t("option",{value:"realtime"},"实时AQI数据",-1),t("option",{value:"statistics"},"统计预测数据",-1)]),512),[[S,r.value]])]),r.value==="realtime"?(f(),c("div",Q,[t("div",$,[a[11]||(a[11]=t("label",null,"时间范围：",-1)),p(t("select",{"onUpdate:modelValue":a[1]||(a[1]=o=>i.value.range=o)},a[10]||(a[10]=[t("option",{value:"1d"},"24小时数据",-1),t("option",{value:"7d"},"7天数据",-1),t("option",{value:"14d"},"14天数据",-1)]),512),[[S,i.value.range]])]),t("div",J,[a[12]||(a[12]=t("label",null,"城市名称：",-1)),p(t("input",{"onUpdate:modelValue":a[2]||(a[2]=o=>i.value.city=o),placeholder:"输入城市英文名如 guiyang"},null,512),[[h,i.value.city]])])])):(f(),c("div",O,[t("div",E,[a[13]||(a[13]=t("label",null,"时间范围：",-1)),p(t("input",{"onUpdate:modelValue":a[3]||(a[3]=o=>n.value.start_time=o),placeholder:"开始时间 2025010100"},null,512),[[h,n.value.start_time]]),p(t("input",{"onUpdate:modelValue":a[4]||(a[4]=o=>n.value.end_time=o),placeholder:"结束时间 2025010800"},null,512),[[h,n.value.end_time]])]),t("div",F,[a[15]||(a[15]=t("label",null,"预测模式：",-1)),p(t("select",{"onUpdate:modelValue":a[5]||(a[5]=o=>n.value.forecasts_mode=o)},a[14]||(a[14]=[t("option",{value:"one_day_earlier"},"提前一天预测",-1),t("option",{value:"three_day_earlier"},"提前三天预测",-1)]),512),[[S,n.value.forecasts_mode]])]),t("div",H,[a[16]||(a[16]=t("label",null,"城市模型：",-1)),p(t("input",{"onUpdate:modelValue":a[6]||(a[6]=o=>n.value.city=o),placeholder:"城市英文名"},null,512),[[h,n.value.city]]),p(t("input",{"onUpdate:modelValue":a[7]||(a[7]=o=>n.value.model=o),placeholder:"模型名称"},null,512),[[h,n.value.model]])])])),t("button",{onClick:w,disabled:d.value},u(d.value?"数据加载中...":"获取数据"),9,Y)]),t("div",x,[m.value?(f(),c("div",B,[a[17]||(a[17]=t("h3",null,"请求错误：",-1)),t("pre",null,u(m.value),1)])):b("",!0),r.value==="realtime"&&y.value?(f(),c("div",R,[t("h3",null,"实时AQI数据 ("+u(i.value.range)+")",1),t("div",j,[t("div",null,[a[18]||(a[18]=t("h4",null,"基础信息",-1)),t("p",null,"更新时间："+u(g.value),1),t("p",null,"数据模型："+u(y.value.model_name),1)]),t("div",null,[a[19]||(a[19]=t("h4",null,"核心指标",-1)),t("p",null,"AQI范围："+u(v.aqiRange),1),t("p",null,"首要污染物："+u(v.primaryPollutant),1)])]),t("pre",L,u(k.value),1)])):_.value?(f(),c("div",z,[t("h3",null,"统计预测数据 ("+u(n.value.forecasts_mode)+")",1),t("div",G,[t("div",null,[a[20]||(a[20]=t("h4",null,"时间范围",-1)),t("p",null,u(_.value.start_time)+" 至 "+u(_.value.end_time),1),t("p",null,"算法版本："+u(_.value.model_name),1)]),t("div",null,[a[21]||(a[21]=t("h4",null,"污染分布",-1)),t("p",null,"主要污染物："+u(v.dominantPollutant),1),t("p",null,"出现频率："+u(v.pollutantFrequency)+"%",1)])]),t("pre",K,u(I.value),1)])):b("",!0)])]))}},tt=U(W,[["__scopeId","data-v-f499b974"]]);export{tt as default};
